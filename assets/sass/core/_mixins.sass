//
// Mixins
// --------------------------------------------------

// Clearfix
// ----------------------------
// @include clearfix
@mixin clearfix
  .clearfix,
  .container
    &:after,
    &:before
      content: "."
      display: block
      height: 0
      clear: both
      visibility: hidden
      clear: both
      zoom: 1
    * html &
      height: 1px
  .clear
    clear: both
    display: block
    overflow: hidden
    visibility: hidden
    width: 0
    height: 0


// Box Sizing
// ----------------------------
// @include box-sizing
@mixin box-sizing($value:border-box)
  @each $prefix in $prefixes
    -#{$prefix}-box-sizing: $value
  box-sizing: $value


// Box Shadow - custom with defaults (4 values)
// ----------------------------
// @include box-shadow
@mixin box-shadow($top: 0, $bottom: 0, $spread: 5px, $color: rgba(#000, .4))
  @each $prefix in $prefixes
    -#{$prefix}-box-shadow: $top $bottom $spread $color
  box-shadow: $top $bottom $spread $color
    


  

// Floating elements
// ----------------------------
// replace @include float-left
// replace @include float-right
@mixin float-left
  float: left  
@mixin float-right
  float: right


// Media Queries
// ----------------------------
// @include media-query(phones)
// @include media-query(tablets)
// @include media-query(desktops)
@mixin media-query($media) 
  @if $media == phones
    @media only screen and (max-width: $breakpoint-small)
      @content
  @else if $media == tablets
    @media only screen and (min-width: $breakpoint-small + 1) and (max-width: $breakpoint-medium)
      @content
  @else if $media == desktops
    @media only screen and (min-width: $breakpoint-large)
      @content



// Alpha, Omega, and Margin
// ----------------------------
@mixin alpha-omega($direction: $lang-front)
  .alpha
    margin-#{$direction}: 0
    padding-#{$direction}: 0
  @if ($direction == left)
    .omega
      margin-right: 0
      padding-right: 0
  @else if ($direction == right)
    .omega
      margin-left: 0
      padding-left: 0

// Center Grid - @include center-grid
@mixin grid-center
  .center-grid
    display: block
    float: none
    @include element-spacing(auto, margin)


// Margin or Padding
// ----------------------------
// @include element-spacing(top-bottom, margin, 10px)
@mixin element-spacing($direction, $spacing, $value: null, $value2: $value)
  @if $direction == vertical
    #{$spacing}: $value 0
  @else if $direction == horizontal
    #{$spacing}: 0 $value
  @else if $direction == top
    #{$spacing}-top: $value
  @else if $direction == right
    #{$spacing}-right: $value
  @else if $direction == bottom
    #{$spacing}-bottom: $value
  @else if $direction == left
    #{$spacing}-left: $value
  @else if $direction == all
    #{$spacing}: $value
  @else if $direction == two
    #{$spacing}: $value $value2
  @else if $direction == auto
    #{$spacing}: 0 auto
  @else if $direction == none
    #{$spacing}: 0



// Two color gradient
// ----------------------------
// @include gradient(two, start, end)
// @include gradient(three, start, end, middle)
@mixin gradient($amount, $start, $end, $middle: null)
  @if $amount == two
    background: $start
    background: -moz-linear-gradient(top,  $start 0%, $end 100%)
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start), color-stop(100%,$end))
    background: -webkit-linear-gradient(top,  $start 0%,$end 100%)
    background: -o-linear-gradient(top,  $start 0%,$end 100%)
    background: -ms-linear-gradient(top,  $start 0%,$end 100%)
    background: linear-gradient(top,  $start 0%,$end 100%)
  @else if $amount == three
    background: $start
    background: -moz-linear-gradient(top, $start 0%, $middle 40%, $end 100%)
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start), color-stop(40%,$middle), color-stop(100%,$end))
    background: -webkit-linear-gradient(top, $start 0%, $middle 40%, $end 100%)
    background: -o-linear-gradient(top, $start 0%, $middle 40%, $end 100%)
    background: -ms-linear-gradient(top, $start 0%, $middle 40%, $end 100%)
    background: linear-gradient(top,  $start 0%, $middle 40%, $end 100%)


// Border Radius Mixins
// ----------------------------
@mixin border-radius($radius, $radius2:$radius)
  -webkit-border-radius: $radius $radius2
  -moz-border-radius: $radius $radius2
  -ms-border-radius: $radius $radius2
  -o-border-radius: $radius $radius2
  border-radius: $radius $radius2

@mixin border-radius-dir($radius, $dir)
  @if $dir == top-left
    @each $prefix in $prefixes
      -#{$prefix}-border-radius: $radius 0 0 0
    border-radius: $radius 0 0 0
  @else if $dir == top-right
    @each $prefix in $prefixes
      -#{$prefix}-border-radius: 0 $radius 0 0
    border-radius: 0 $radius 0 0
  @else if $dir == top-left
    @each $prefix in $prefixes
      -#{$prefix}-border-radius: 0 0 $radius 0
    border-radius: 0 0 $radius 0
  @else if $dir == top-right
    @each $prefix in $prefixes
      -#{$prefix}-border-radius: 0 0 0 $radius
    border-radius: 0 0 0 $radius


@mixin border-top-left-radius($radius)
  border-radius: $radius 0 0 0
  
@mixin border-top-right-radius($radius)
  border-radius: 0 $radius 0 0
  
@mixin border-bottom-left-radius($radius)
  border-radius: 0 0 $radius 0
  
@mixin border-bottom-right-radius($radius)
  border-radius: 0 0 0 $radius
  
  
  
// Typography
// ----------------------------
@mixin force-wrap
  white-space: pre
  white-space: pre-wrap
  white-space: pre-line
  white-space: -pre-wrap
  white-space: -o-pre-wrap
  white-space: -moz-pre-wrap
  white-space: -hp-pre-wrap
  word-wrap: break-word



// Grid
// --------------------------------------------------------

// Grid Rows
// ----------------------------
@mixin grid-rows($value, $direction, $rows: $max-rows)
  @if $value == normal
    // Rows by 5
    @for $i from 1 through $rows
      $num: $i * 5
      $decimal: $num / 100
      .#{$grid-class}-#{$num}
        @extend %grid-column
        width: 1% * $num
        @include ie7-grid-element($decimal)
      .#{$pull-class}-#{$num}
        #{$direction}: -(1% * $num)
        @include ie7-pull($decimal)
      .#{$push-class}-#{$num}
        #{$direction}: (1% * $num)
        @include ie7-push($decimal)

  @else if $value == thirds
    // Rows by 1/3
    @for $i from 1 through 2
      $num: $i * 33
      $mul: 1/3
      $decimal: $i * $mul
      $percent: ($num + $decimal)
  
      .#{$grid-class}-#{$num}
        @extend %grid-column
        width: 1% * $percent
        @include ie7-grid-element($decimal)
      .#{$pull-class}-#{$num}
        #{$direction}: -(1% * $percent)
        @include ie7-pull($decimal)
      .#{$push-class}-#{$num}
        #{$direction}: (1% * $percent)
        @include ie7-push($decimal)

  @else if $value == mobile
    // Rows for Mobile
    @for $i from 1 through 3
      $num: $i * 25
      .#{$mobile-class}-#{$num}
        width: 1% * $num
      .mobile-#{$pull-class}-#{$num}
        #{$direction}: -(1% * $num)
      .mobile-#{$push-class}-#{$num}
        #{$direction}: (1% * $num)


// Default Grid Generator
// ----------------------------
// @include grid($direction)
@mixin grid($direction:$lang-front, $content-width: $grid-size, $space:$max-space, $rows:$max-rows)
  .container
    width: $content-width
    @include element-spacing(auto, margin)
    %grid-column
      +box-sizing(border-box)
      @include float-direction($direction)
      padding: 0 15px
      @include ie-7-support($space)
      position: relative
    
    @include grid-rows(normal, $direction)
    @include grid-rows(thirds, $direction)
    @include alpha-omega($direction)
    @include grid-center
    @include hide-view(desktop)
    

// Mobile Grid Generator - NO PUSH OR PULL
// ----------------------------
// @include grid-mobile($direction)

@mixin grid-mobile ($direction:$lang-front, $content-width: $max-resp-width, $space: $max-resp-space)
  $grid-width: 100%
  .container
    width: $content-width
    @include element-spacing(auto, margin)
    [class^="#{$grid-class}-"]
      display: inline
      @include float-direction($direction)
      width: $grid-width
      [class^="#{$grid-class}-"], 
      [class^="#{$mobile-class}-#{$grid-class}-"]
        padding: 0
        margin: 0

    @include grid-rows(mobile, $direction)
    @include alpha-omega($direction)
    @include grid-center
    
    [class^="#{$pull-class}-"],
    [class^="#{$push-class}-"]
      #{$direction}: 0
      
    @include hide-view(mobile)
  

// IE 7 Support
// ----------------------------
@mixin ie-7-support($space)
  @if $ie7-support
    *padding-left: 0
    *padding-right: 0
    & > *
      @include ie-after-margin-fix($space)

@mixin ie-percentage-width-fix($decimal)
  *width: expression(Math.floor(#{$decimal} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
  
@mixin ie-percentage-push-fix($lang-front, $decimal)
  *#{$lang-front}: expression(Math.floor(#{$decimal} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
  
@mixin ie-percentage-pull-fix($lang-front, $decimal)
  *#{$lang-front}: expression(Math.floor(#{$decimal * -1} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
  
@mixin ie-percentage-direction-fix($decimal)

@mixin ie7-grid-element($decimal)
  @if $ie7-support
    @include ie-percentage-width-fix($decimal)
  
@mixin ie7-push($decimal)
  @if $ie7-support
    @include ie-percentage-push-fix($lang-front, $decimal)
  
@mixin ie7-pull($decimal)
  @if $ie7-support
    @include ie-percentage-pull-fix($lang-front, $decimal)


// Grid Float Direction (LTR or RTL)
// ----------------------------
@mixin float-direction($direction)
  @if ($direction == left)
    float: left
  @else if ($direction == right)
    float: right
    





// Show and Hide Elements
// ----------------------------
@mixin hide-view($view)
  @if $view == desktop
    .hide-desktop,
    .hide-tablet
      display: none !important
    .hide-mobile
      display: block !important
    
  @if $view == tablet
    .hide-desktop,
    .hide-mobile
      display: none !important
    .hide-tablet
      display: block !important
  
  @if $view == mobile
    .hide-desktop,
    .hide-tablet
      display: none !important
    .hide-mobile
      display: block !important


@mixin show-block($element)
  .show-#{$element}
    display: block !important
      
//@mixin hide-desktop
//  .hide-desktop
//    display: none !important
//  .hide-mobile
//    display: block !important

//@mixin hide-mobile
//  .hide-desktop
//    display: block !important
//  .hide-mobile
//    display: none !important

//@mixin show-mobile
//  .show-mobile
//    display: block !important

//@mixin show-desktop
//  .show-desktop
//    display: block !important



// Tables
// ----------------------------
// @include table-base
@mixin table-base
  th
    text-align: center
    font-weight: bold
  td, th
    padding: 2px


// Table Color Generator
// ----------------------------
//@include table-color-generator($class, $color1, $color2, $color3)
@mixin table-color-generator($class, $color1, $color2, $color3)
  .#{$class}
    thead,
    tfoot
      th,
      td
        background-color: $color1
    tbody
      &.odd
        background-color: $color2
      &.even
        background-color: $color3



// Buttons
// ----------------------------
@mixin default-button
  background: #DEDEDE
  border: none
  @include border-radius(5px, 5px)
  @include box-shadow(0, 1px, 2px)
  color: $white !important
  @extend %cursor
  display: inline-block
  font-size: $default-font-size
  font-weight: bold
  @include element-spacing(vertical, margin, 1em) //  margin: 15px 0
  outline: 0
  @include element-spacing(two, padding, 0.667em, 1.333em) //  padding: 10px 22px
  @extend %noTextDecoration
  vertical-align: middle
  zoom: 1

@mixin default-button-hover
  background-color: #d3d3d3
  color: $white !important
  


// Buttons with Gradients
@mixin default-gradient-button
  border: none
  @include border-radius(5px, 5px)
  @include box-shadow(0, 1px, 2px)
  @include gradient(two, #7d7e7d, #0e0e0e)
  color: $white
  @extend %cursor
  display: inline-block
  font-size: $default-font-size
  font-weight: bold
  @include element-spacing(vertical, margin, 1em) //  margin: 15px 0
  outline: 0
  @include element-spacing(two, padding, 0.667em, 1.333em) //  padding: 10px 22px
  @extend %noTextDecoration
  vertical-align: middle
  zoom: 1

@mixin default-gradient-button-hover
  color: $white
  @include gradient(two, #9b9b9b, #3d3d3d)


// Button Create (Flat)
// @include button(class, color1, color2, text-color)
@mixin create-button($class, $color1, $color2, $text-color: $white)
  .#{$class}
    background-color: $color1
    color: $text-color !important
    &:hover
      background-color: $color2
      color: $text-color !important

// Button Create (Gradient)
// @include button(class, color1, color2, text-color)
@mixin create-button-gradient($class, $color1, $color2, $color3, $text-color: $white)
  .#{$class}
    color: $text-color !important
    @include gradient(two, $color1, $color2)
    &:hover
      color: $text-color !important
      @include gradient(two, $color1, $color3)



// Extendable Mixin
// ----------------------------
@mixin extendables  
  %show-block
    display: block
  
  %hide-block
    display: none
  
  %noMarPad
    margin: 0
    padding: 0
  
  %absolute
    position: absolute
    
  %relative
    position: relative

  %noTextDecoration
    text-decoration: none
  
  %cursor
    cursor: pointer
  
  %auto-center
    margin-left: auto
    margin-right: auto
    
  %float-left
    float: left
  
  %float-right
    float: right
